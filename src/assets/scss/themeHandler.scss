@import "./themeColors.scss";

//遍历主题map
@mixin themeify {
	@each $theme-name, $theme-map in $themes {
		//!global 把局部变量强升为全局变量
		$theme-map: $theme-map !global;
		//判断html的data-theme的属性值  #{}是sass的插值表达式
		//& sass嵌套里的父容器标识   @content是混合器插槽，像vue的slot
		[data-theme="#{$theme-name}"] & {
			@content;
		}
	}
}

//声明一个根据Key获取颜色的function
@function themed($key) {
	@return map-get($theme-map, $key);
}

//获取字体颜色
@mixin font_color($color) {
	@include themeify {
		color: themed($color) !important;
	}
}

//获取边框颜色
@mixin border_color($color) {
	@include themeify {
		border-color: themed($color) !important;
	}
}

//获取边框颜色
@mixin outline_color($color) {
	@include themeify {
		outline-color: themed($color) !important;
	}
}

//获取背景颜色
@mixin fill_color($color) {
	@include themeify {
		background-color: themed($color) !important;
	}
}

@mixin border($weight, $style, $color) {
	@include themeify {
		border: $weight $style themed($color) !important;
	}
}

@mixin outline($weight, $style, $color) {
	@include themeify {
		outline: $weight $style themed($color) !important;
	}
}

//阴影
@mixin box_shadow($offsetX, $offsetY, $weight, $spread, $color) {
	@include themeify {
		box-shadow: $offsetX $offsetY $weight $spread themed($color) !important;
	}
}

@mixin linear_gradient($dir, $color1, $color2) {
	@include themeify {
		background: linear-gradient(
			$dir,
			themed($color1),
			themed($color2)
		) !important;
	}
}
